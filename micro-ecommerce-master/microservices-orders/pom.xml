<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.westum</groupId>
		<artifactId>microservices-ecommerce-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>microservices-orders</artifactId>
	<name>microservices-orders</name>
	<description>Order/Payment mangement service</description>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-jwt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jadira.usertype</groupId>
			<artifactId>usertype.extended</artifactId>
			<version>3.2.0.GA</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-joda</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jolokia</groupId>
			<artifactId>jolokia-core</artifactId>
		</dependency>
	</dependencies>

	<properties>
		<start-class>com.idugalic.orders.Application</start-class>
	</properties>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- that's the default value, you don't have to set it -->
					<prefix>git</prefix>

					<!-- that's the default value -->
					<dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>

					<!-- false is default here, it prints some more information during the 
						build -->
					<verbose>false</verbose>

					<!-- @since 2.1.10 -->
					<!-- false is default here, if set to true it uses native `git` excutable 
						for extracting all data. This usualy has better performance than the default 
						(jgit) implemenation, but requires you to have git available as executable 
						for the build as well as *might break unexpectedly* when you upgrade your 
						system-wide git installation. As rule of thumb - stay on `jgit` (keep this 
						`false`) until you notice performance problems. -->
					<useNativeGit>false</useNativeGit>

					<!-- If you'd like to tell the plugin where your .git directory is, 
						use this setting, otherwise we'll perform a search trying to figure out the 
						right directory. It's better to add it explicite IMHO. -->
					<dotGitDirectory>${project.basedir}/../.git</dotGitDirectory>

					<!-- ALTERNATE SETUP - GENERATE FILE -->
					<!-- If you want to keep git information, even in your WAR file etc, 
						use this mode, which will generate a properties file (with filled out values) 
						which you can then normally read using new Properties().load(/**/) -->

					<!-- this is true by default; You may want to set this to false, if 
						the plugin should run inside a <packaging>pom</packaging> project. Most projects 
						won't need to override this property. For an use-case for this kind of behaviour 
						see: https://github.com/ktoso/maven-git-commit-id-plugin/issues/21 -->
					<skipPoms>true</skipPoms>

					<!-- this is false by default, forces the plugin to generate the git.properties 
						file -->
					<generateGitPropertiesFile>true</generateGitPropertiesFile>

					<!-- The path for the to be generated properties file, it's relative 
						to ${project.basedir} -->
					<generateGitPropertiesFilename>src/main/resources/git.properties</generateGitPropertiesFilename>

					<!-- true by default, controls whether the plugin will fail when no 
						.git directory is found, when set to false the plugin will just skip execution -->
					<!-- @since 2.0.4 -->
					<failOnNoGitDirectory>false</failOnNoGitDirectory>

					<!-- @since v2.0.4 -->
					<!-- Controls the length of the abbreviated git commit it (git.commit.id.abbrev) 
						Defaults to `7`. `0` carries the special meaning. Maximum value is `40`, 
						because of max SHA-1 length. -->
					<abbrevLength>7</abbrevLength>

					<!-- @since 2.1.8 -->
					<!-- skip the plugin execution completely. This is useful for e.g. profile 
						activated plugin invocations or to use properties to enable / disable pom 
						features. Default value is 'false'. -->
					<skip>false</skip>

					<!-- @since 2.1.9 -->
					<!-- Can be used to exclude certain properties from being emited into 
						the resulting file. May be useful when you want to hide {@code git.remote.origin.url} 
						(maybe because it contains your repo password?), or the email of the committer 
						etc. Each value may be globbing, that is, you can write {@code git.commit.user.*} 
						to exclude both, the {@code name}, as well as {@code email} properties from 
						being emitted into the resulting files. Please note that the strings here 
						are Java regexes ({@code .*} is globbing, not plain {@code *}). -->
					<excludeProperties>
						<!-- <excludeProperty>git.user.*</excludeProperty> -->
					</excludeProperties>


					<!-- @since 2.1.0 -->
					<!-- read up about git-describe on the in man, or it's homepage - it's 
						a really powerful versioning helper and the recommended way to use git-commit-id-plugin. 
						The configuration bellow is optional, by default describe will run "just 
						like git-describe on the command line", even though it's a JGit reimplementation. -->
					<gitDescribe>

						<!-- don't generate the describe property -->
						<skip>false</skip>

						<!-- if no tag was found "near" this commit, just print the commit's 
							id instead, helpful when you always expect this field to be not-empty -->
						<always>false</always>
						<!-- how many chars should be displayed as the commit object id? 7 
							is git's default, 0 has a special meaning (see end of this README.md), and 
							40 is the maximum value here -->
						<abbrev>7</abbrev>

						<!-- when the build is triggered while the repo is in "dirty state", 
							append this suffix -->
						<dirty>-dirty</dirty>

						<!-- always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty" 
							format, even if "on" a tag. The distance will always be 0 if you're "on" 
							the tag. -->
						<forceLongFormat>false</forceLongFormat>
					</gitDescribe>
				</configuration>

			</plugin>
		</plugins>
	</build>
</project>